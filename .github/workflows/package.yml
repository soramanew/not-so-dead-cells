name: package
run-name: Package and create release
on:
  push:
    paths:
      - src/**
      - assets/**
      - main.spec
      - requirements.txt
jobs:
  build:
    name: Build on ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config: [{ name: windows, os: windows-latest, ext: .exe }, { name: linux, os: ubuntu-latest, ext: "" }]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -U pyinstaller
      - name: Package via pyinstaller & compress to gzipped tarball
        run: |
          pyinstaller main.spec
          mv dist/main/main${{ matrix.config.ext }} dist/main/'Not so Dead Cells'${{ matrix.config.ext }}
          tar -czf ${{ matrix.config.name }}.tar.gz -C dist/main .
      - name: Archive packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.name }}
          path: ${{ matrix.config.name }}.tar.gz
  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          merge-multiple: true
      - name: Get semver tag
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          search_commit_body: true
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ !contains(fromJSON('["major", "minor"]'), steps.semver.outputs.version_type) }}
          files: release/*.tar.gz
          tag_name: ${{ steps.semver.outputs.version_tag }}
          generate_release_notes: true
